
plugins {
    id 'java-gradle-plugin'
    id 'com.gradle.plugin-publish' version '1.0.0'
    id 'jacoco'
    alias libs.plugins.spotless
    alias libs.plugins.sonarqube
}

repositories {
    mavenCentral()
}

if (hasProperty('buildScan')) {
    buildScan {
        termsOfServiceUrl = 'https://gradle.com/terms-of-service'
        termsOfServiceAgree = 'yes'
    }
}

apply from: project.file('compile.gradle')
apply from: project.file('spotless.gradle')
apply from: project.file('test.gradle')
apply from: project.file('jacoco.gradle')
apply from: project.file('sonarqube.gradle')

gradlePlugin {
    website = 'https://guillermo.dev/gradle-plugin-c-language/'
    vcsUrl = 'https://github.com/guillermocalvo/gradle-plugin-c-language'
    plugins {
        cApplication {
            id = 'dev.guillermo.gradle.c-application'
            displayName = 'C Application Plugin'
            description = 'A plugin that produces a native application from C source'
            tags.addAll('native', 'c', 'application', 'toolchain')
            implementationClass = 'dev.guillermo.gradle.language.c.plugins.CApplicationPlugin'
        }
        cLibrary {
            id = 'dev.guillermo.gradle.c-library'
            displayName = 'C Library Plugin'
            description = 'A plugin that produces a native library from C source'
            tags.addAll('native', 'c', 'library', 'toolchain')
            implementationClass = 'dev.guillermo.gradle.language.c.plugins.CLibraryPlugin'
        }
        cUnitTest {
            id = 'dev.guillermo.gradle.c-unit-test'
            displayName = 'C Unit Test Plugin'
            description = 'A plugin that sets up the infrastructure for testing C binaries using a simple test executable.'
            tags.addAll('native', 'c', 'unit-test', 'toolchain')
            implementationClass = 'dev.guillermo.gradle.language.c.plugins.CUnitTestPlugin'
        }
    }
}
